{"version":3,"sources":["components/TodoList/TodoList.jsx","components/api.js","components/CurrentUser/CurrentUser.jsx","App.js","index.js"],"names":["TodoList","todos","selectUser","filterTodos","filterCompleted","className","type","placeholder","onChange","event","target","value","map","todo","key","id","checked","completed","readOnly","title","onClick","userId","getUser","fetch","then","response","json","result","data","CurrentUser","state","user","this","props","setState","clearUser","name","email","phone","React","Component","App","todosFromServer","selectedUserId","query","filter","includes","initTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.604a7046.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  selectUser,\n  filterTodos,\n  filterCompleted,\n}) => (\n  <div className=\"TodoList\">\n    <input\n      type=\"text\"\n      placeholder=\"Enter the title of todo\"\n      onChange={event => filterTodos(event.target.value)}\n    />\n    <select onChange={event => filterCompleted(event.target.value)}>\n      <option value=\"all\">All</option>\n      <option value=\"active\">Active</option>\n      <option value=\"completed\">Completed</option>\n    </select>\n    <h2>Todos:</h2>\n    <ul className=\"TodoList__list\">\n      {todos.map(todo => (\n        <li className=\"TodoList__item\" key={todo.id}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={todo.completed}\n              readOnly\n            />\n            {todo.title}\n          </label>\n\n          <button\n            type=\"button\"\n            onClick={() => selectUser(todo.userId)}\n          >\n            User&nbsp;#\n            {todo.userId}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.string.isRequierd,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool,\n    createdAt: PropTypes.string.isRequired,\n    updatedAt: PropTypes.string.isRequired,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  filterTodos: PropTypes.func.isRequired,\n  filterCompleted: PropTypes.func.isRequired,\n};\n","const TODOS_URL = 'https://mate-api.herokuapp.com/todos';\nconst USER_URL = 'https://mate-api.herokuapp.com/users';\n\nexport function getTodos() {\n  return fetch(`${TODOS_URL}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function getUser(userId) {\n  return fetch(`${USER_URL}/${userId}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: '',\n  }\n\n  componentDidMount() {\n    const { userId } = this.props;\n\n    getUser(userId)\n      .then(user => this.setState({ user }));\n  }\n\n  componentDidUpdate() {\n    const { userId } = this.props;\n\n    if (this.state.user.id === userId) {\n      return;\n    }\n\n    getUser(userId)\n      .then(user => this.setState({ user }));\n  }\n\n  render() {\n    const { userId, clearUser } = this.props;\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2>{`Selected user: ${userId}`}</h2>\n\n        <ul>\n          <li>{user.name}</li>\n          <li>{user.email}</li>\n          <li>{user.phone}</li>\n        </ul>\n        <button\n          type=\"button\"\n          onClick={() => clearUser()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './components/api';\n\nclass App extends React.Component {\n  state = {\n    todosFromServer: [],\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        const initTodos = todos.filter(todo => todo.title);\n\n        this.setState({\n          todosFromServer: [...initTodos],\n          todos: [...initTodos],\n        });\n      });\n  }\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  filterTodos = (query) => {\n    this.setState(state => ({\n      todos: state.todosFromServer.filter(todo => todo.title.includes(query)),\n    }));\n  }\n\n  filterCompleted = (value) => {\n    switch (value) {\n      case 'active':\n        this.setState(state => ({\n          todos: state.todosFromServer.filter(todo => !todo.completed),\n        }));\n        break;\n      case 'completed':\n        this.setState(state => ({\n          todos: state.todosFromServer.filter(todo => todo.completed),\n        }));\n        break;\n      default:\n        this.setState(state => ({\n          todos: state.todosFromServer,\n        }));\n    }\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUserId={selectedUserId}\n            selectUser={this.selectUser}\n            filterTodos={this.filterTodos}\n            filterCompleted={this.filterCompleted}\n          />\n        </div>\n        <div className=\"App__content\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              clearUser={this.clearUser}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}